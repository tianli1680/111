name: Process Playlist and Convert to M3U

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 0 * * *'  # 每天自动运行一次

jobs:
  process-playlist:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Download and process playlist
      run: |
        python << 'EOF'
import requests
import re

def download_playlist(url):
    try:
        response = requests.get(url, timeout=10)
        response.encoding = 'utf-8'
        response.raise_for_status()
        return response.text
    except Exception as e:
        print(f"下载播放列表失败: {e}")
        return None

def extract_groups(content):
    migu_content = []
    iqiyi_content = []
    
    # 正则表达式匹配分组
    migu_pattern = r'赛事咪咕,#genre#(.*?)(?=#|\Z)'
    iqiyi_pattern = r'爱奇频道,#genre#(.*?)(?=#|\Z)'
    
    # 提取咪咕内容
    migu_matches = re.findall(migu_pattern, content, re.DOTALL)
    if migu_matches:
        migu_content = [line.strip() for line in migu_matches[0].split('\n') if line.strip()]
    
    # 提取爱奇艺内容
    iqiyi_matches = re.findall(iqiyi_pattern, content, re.DOTALL)
    if iqiyi_matches:
        iqiyi_content = [line.strip() for line in iqiyi_matches[0].split('\n') if line.strip()]
    
    return migu_content, iqiyi_content

def save_txt_files(migu_content, iqiyi_content):
    # 保存为txt文件
    with open('migu.txt', 'w', encoding='utf-8') as f:
        for line in migu_content:
            f.write(line + '\n')
    
    with open('iqiyi.txt', 'w', encoding='utf-8') as f:
        for line in iqiyi_content:
            f.write(line + '\n')
    
    print(f"已保存 migu.txt，包含 {len(migu_content)} 个项目")
    print(f"已保存 iqiyi.txt，包含 {len(iqiyi_content)} 个项目")

def convert_to_m3u():
    # 转换咪咕文件
    try:
        with open('migu.txt', 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        with open('migu.m3u', 'w', encoding='utf-8') as f:
            f.write('#EXTM3U\n')
            for line in lines:
                line = line.strip()
                if line and ',' in line:
                    parts = line.split(',', 1)
                    if len(parts) == 2:
                        name, url = parts
                        f.write(f'#EXTINF:-1,{name}\n')
                        f.write(f'{url}\n')
        
        print(f"已转换 migu.m3u，包含 {len(lines)} 个频道")
    except Exception as e:
        print(f"转换咪咕文件失败: {e}")
    
    # 转换爱奇艺文件
    try:
        with open('iqiyi.txt', 'r', encoding='utf-8') as f:
            lines = f.readlines()
        
        with open('iqiyi.m3u', 'w', encoding='utf-8') as f:
            f.write('#EXTM3U\n')
            for line in lines:
                line = line.strip()
                if line and ',' in line:
                    parts = line.split(',', 1)
                    if len(parts) == 2:
                        name, url = parts
                        f.write(f'#EXTINF:-1,{name}\n')
                        f.write(f'{url}\n')
        
        print(f"已转换 iqiyi.m3u，包含 {len(lines)} 个频道")
    except Exception as e:
        print(f"转换爱奇艺文件失败: {e}")

def main():
    url = "http://rihou.cc:567/gggg.nzk/"
    
    print("开始下载播放列表...")
    content = download_playlist(url)
    
    if content:
        print("下载成功，开始处理内容...")
        migu_content, iqiyi_content = extract_groups(content)
        
        print(f"找到咪咕频道: {len(migu_content)} 个")
        print(f"找到爱奇艺频道: {len(iqiyi_content)} 个")
        
        save_txt_files(migu_content, iqiyi_content)
        convert_to_m3u()
        
        print("处理完成！")
    else:
        print("处理失败！")

if __name__ == "__main__":
    main()
EOF
        
    - name: List generated files
      run: ls -la *.txt *.m3u
      
    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add *.txt *.m3u
        git diff --staged --quiet || git commit -m "Update playlist files - $(date)"
        git push
